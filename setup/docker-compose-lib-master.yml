version: '3.3'
networks:
    internal:
services:
    rclone_library_sync:
        # container_name: pdp-rclone-library-download
        # # command: 'lsd SECURE_BACKUP:'
        # # library download from master
        # command: 'copy SECURE_BACKUP: /master_data --progress'
        # library upload from master
        command: 'sync /master_data secure_backup: --progress'
        labels:
            - "autoheal-library=true"
        #command: 'lsd SECURE_BACKUP:'
        environment:
            - TZ=Australia/Melbourne
            - PUID=${USERID}   
            - PGID=${GROUPID}
            - 'RCLONE_CONFIG_SECURE_BACKUP_REMOTE=gdrive_backup_rw:plexdriveplus'
            - RCLONE_CONFIG_SECURE_BACKUP_TYPE=${RCLONE_CONFIG_SECURE_BACKUP_TYPE}
            - RCLONE_CONFIG_SECURE_BACKUP_FILENAME_ENCRYPTION=${RCLONE_CONFIG_SECURE_BACKUP_FILENAME_ENCRYPTION}
            - RCLONE_CONFIG_SECURE_BACKUP_DIRECTORY_NAME_ENCRYPTION=${RCLONE_CONFIG_SECURE_BACKUP_DIRECTORY_NAME_ENCRYPTION}
            - RCLONE_CONFIG_SECURE_BACKUP_PASSWORD=${RCLONE_CONFIG_SECURE_BACKUP_PASSWORD}
            - RCLONE_CONFIG_SECURE_BACKUP_PASSWORD2=${RCLONE_CONFIG_SECURE_BACKUP_PASSWORD2}
        volumes:
            - '${DOCKER_ROOT}/rclone/:/config/rclone:rw'
            - '${DOCKER_ROOT}/plex-scanner/Library/Application Support/Plex Media Server/Plug-in Support/:/master_data/Library/Application Support/Plex Media Server/Plug-in Support/:rw'
            - '${DOCKER_ROOT}/config/:/master_data/config:rw'
            - '${DOCKER_ROOT}/plexdrive/cache/:/master_data/plexdrive/cache:rw'
            - '${DOCKER_ROOT}/plex-scanner/backups/:/master_data/plex-scanner/backups:rw'
        networks:
            - internal
        logging:
            options:
                max-size: 20m
        image: rclone/rclone
    autoheal-library:
        # container_name: pdp-autoheal-library-download
        restart: always
        image: willfarrell/autoheal
        environment:
            - AUTOHEAL_CONTAINER_LABEL=autoheal-library
            - AUTOHEAL_INTERVAL=1440
            - DOCKER_SOCK=/var/run/docker.sock
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - internal
    wireguard:
        image: lscr.io/linuxserver/wireguard:latest
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
        environment:
            - PGID=${GROUPID}
            - PUID=${USERID}
            - TZ=Australia/Melbourne    
            - SERVERURL=${WIREGUARD_SERVERURL} #optional
            - SERVERPORT=${WIREGUARD_SERVERPORT} #optional
            - PEERS=${WIREGUARD_PEERS} #optional
            - PEERDNS=auto #optional
            - INTERNAL_SUBNET=${WIREGUARD_INTERNAL_SUBNET} #optional 10.13.13.0
            - ALLOWEDIPS=${WIREGUARD_ALLOWEDIPS} #optional 0.0.0.0/0
            - LOG_CONFS=true #optional
        volumes:
            - ${DOCKER_ROOT}/wireguard:/config
        restart: unless-stopped
        networks:
            - internal
        ports:
            - ${WIREGUARD_SERVERPORT}:51820/udp
    agent:
        image: portainer/agent
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker/volumes:/var/lib/docker/volumes
    portainer:
        image: portainer/portainer-ce
        command: -H tcp://agent:9001 --tlsskipverify
        ports:
            - "9999:9000"
        volumes:
            - portainer_data:/data
        networks:
            - internal

volumes:
    portainer_data: