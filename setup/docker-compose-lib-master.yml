version: '3.3'
networks:
    support:
        driver: bridge
services:
    rclone_library_sync_to_cloud:
        # container_name: pdp-rclone-library-download
        # # command: 'lsd SECURE_BACKUP:'
        # # library download from master
        # command: 'copy SECURE_BACKUP: /master_data --progress'
        # library upload from master
        command: 'sync /master_data secure_backup: --progress  --filter "- *.db" --filter "- *.db-wal" --filter "- *.db-shm"'
        labels:
            - "autoheal-library=true"
        #command: 'lsd SECURE_BACKUP:'
        environment:
            - TZ=Australia/Melbourne
            - PUID=${USERID}
            - PGID=${GROUPID}
            - 'RCLONE_CONFIG_SECURE_BACKUP_REMOTE=gdrive_backup_rw:plexdriveplus'
        env_file: 
            - "${DOCKER_ROOT}/config/rclone.env"
        volumes:
            - '${DOCKER_ROOT}/rclone/:/config/rclone:rw'
            #Legacy library backup path
            - '${DOCKER_ROOT}/plex-scanner/Library/Application Support/Plex Media Server/Plug-in Support/:/master_data/Library/Application Support/Plex Media Server/Plug-in Support/:rw'
            - '${DOCKER_ROOT}/config/:/master_data/config:rw'
            - '${DOCKER_ROOT}/plexdrive/cache/:/master_data/plexdrive/cache:rw'
            - '${DOCKER_ROOT}/plex-scanner/backups/:/master_data/plex-scanner/backups:rw'
            # Library backup paths
            - '${LARGE_DISK_ROOT}/plex_library_backup/meta:/master_data/plex_library_backup/meta:rw'
            - '${DOCKER_ROOT}/plex-scanner/Library/Application Support/Plex Media Server/Plug-in Support/Databases:/master_data/plex_library_backup/databases:rw'
        networks:
            - bridge
            - internal
        logging:
            options:
                max-size: 20m
        image: rclone/rclone
    rclone_library_sync_from_cloud:
        #command: 'sync SECURE_BACKUP: /config --progress --filter "+ /Library/**" --filter "- /config/.env" --filter "+ /config/**" --filter "- *"'
        command: 'sync SECURE_BACKUP: /master_data --progress --filter-from /library_path_local/library_images_loaded.dat --filter "+ /plex_library_backup/**" --filter "- *"'
        labels:
            - "autoheal-library=true"
        environment:
            - TZ=Australia/Melbourne
            - PUID=${USERID}
            - PGID=${GROUPID}
        env_file: 
            - "${DOCKER_ROOT}/config/rclone.env"
        volumes:
            - '${LARGE_DISK_ROOT}/plex_master_backup:/master_data/plex_library_backup:rw'
                # mount path containing done file --filter-from /library_path_local/library_images_loaded.dat
            - '${DOCKER_ROOT}/plex-streamer/Library/Application Support/Plex Media Server:/library_path_local:rw'
        networks:
            - bridge
            - internal
        user: "${USERID}:${GROUPID}"
        logging:
            options:
                max-size: 20m
        image: rclone/rclone
    autoheal-library:
        # container_name: pdp-autoheal-library-download
        restart: always
        image: willfarrell/autoheal
        environment:
            - AUTOHEAL_CONTAINER_LABEL=autoheal-library
            - AUTOHEAL_INTERVAL=1440
            - DOCKER_SOCK=/var/run/docker.sock
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - internal
    tailscale:
        hostname: plex-master-server                         # This will become the tailscale device name
        image: tailscale/tailscale:stable
        network_mode: host
        env_file: 
            - "${DOCKER_ROOT}/tailscale/tailscale-master.env"
        volumes:
            - "/var/lib:/var/lib"        # State data will be stored in this directory
            - "/dev/net/tun:/dev/net/tun"           # Required for tailscale to work
        cap_add:                                    # Required for tailscale to work
          - net_admin
          - sys_module
        # to authenticate to tailscale run:
        # docker exec plexdriveplus-tailscale-1 tailscale up 
        # or visit url in logs
        restart: always
    portainer_portal:
        restart: always
        image: portainer/portainer-ce
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker/volumes:/var/lib/docker/volumes
            - portainer_data:/data
        networks:
            - internal
        network_mode: service:tailscale

volumes:
    portainer_data: